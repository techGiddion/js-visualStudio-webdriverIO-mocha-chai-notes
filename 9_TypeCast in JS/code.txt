//>>	Type conversion is the process of converting data of one type to another.
//	For example: converting String data to Number.

/*
	There are two types of type conversion in JavaScript.
	* Implicit Conversion , automatic type conversion [Type coercion]
	* Explicit Conversion , manual type conversion
*/

//>>	Implicit Conversion - automatic type conversion [Type coercion]
// //	1. numeric String with + gives string type
// console.log("2022" + 20); // 202220
// //	2. numeric String with [-,*,/] gives numeric type

// console.log("20" - 2); //18
// console.log("20" * 2); //40
// console.log("20" / 2); //10

// //	3. non numeric string with [-,*,/] returns Nan

// console.log("TechGiddion" * 2);

// //	4. if boolean is used, true is 1, false is 0

// console.log(2 + true); // 2+1 = 3
// console.log(2 + false); // 2+0 = 2
// console.log(2 * true); // 2 * 1 = 2
// console.log(2 / false); // 2/1 = 2

// console.log(null + 1); // 0+1 = 1

// //	5. undefined with number, boolean or null gives NaN

// console.log(undefined + true);

//>>	Explicit Conversion - manual type conversion
//	1. numeric String can be converted to number by using Number
console.log(Number("20"));
//	2. non numeric String can be converted to number by using Number but the results will be NaN always.

console.log(Number("techgiddion"));

//	3. numbers,boolean,null,undefined can be converted to string by using String or using toString();

console.log(String(undefined));
console.log(String(null));
console.log(String(true));
console.log(String(24));

let i = 10;

console.log(i.toString());

//	4. null or or empty string Conversion to Number return 0

console.log(Number(null));
console.log(Number(""));

//	5. You can also generate numbers from strings using parseInt(),
//      parseFloat(), unary operator + and Math.floor().

console.log(parseInt("234"));
console.log(parseFloat("234.23"));
console.log(+"234");
console.log(Math.floor("234"));
